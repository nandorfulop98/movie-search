{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nandi\\\\Desktop\\\\movie-search\\\\src\\\\components\\\\Search.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport InputBase from \"@mui/material/InputBase\";\nimport axios from \"axios\";\nimport { API_URL, getMovie } from \"../constants\";\nimport { GlobalContext } from \"../store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = styled(\"div\")(({\n  theme\n}) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25)\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\"\n  }\n}));\nconst SearchIconWrapper = styled(\"div\")(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\"\n}));\nconst StyledInputBase = styled(InputBase)(({\n  theme\n}) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\"\n      }\n    }\n  }\n}));\n\nconst SearchBar = () => {\n  _s();\n\n  const {\n    setMovies,\n    setMoviesLoading\n  } = React.useContext(GlobalContext);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [searchString, setSearchString] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      var _queryResult$data$dat, _queryResult$data, _queryResult$data$dat2;\n\n      setMoviesLoading(true);\n      const queryResult = await axios.post(API_URL, {\n        query: getMovie(searchString)\n      });\n      const data = (_queryResult$data$dat = queryResult === null || queryResult === void 0 ? void 0 : (_queryResult$data = queryResult.data) === null || _queryResult$data === void 0 ? void 0 : (_queryResult$data$dat2 = _queryResult$data.data) === null || _queryResult$data$dat2 === void 0 ? void 0 : _queryResult$data$dat2.searchMovies) !== null && _queryResult$data$dat !== void 0 ? _queryResult$data$dat : [];\n      data && setMovies(data);\n      setMoviesLoading(false);\n    };\n\n    searchString !== \"\" && fetchData();\n  }, [searchString]);\n  return /*#__PURE__*/_jsxDEV(Search, {\n    children: [/*#__PURE__*/_jsxDEV(SearchIconWrapper, {\n      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledInputBase, {\n      placeholder: \"Search\\u2026\",\n      inputProps: {\n        \"aria-label\": \"search\"\n      },\n      onChange: ({\n        target: {\n          value\n        }\n      }) => setInputValue(value),\n      style: {\n        cursor: \"pointer\"\n      },\n      onKeyPress: ({\n        key\n      }) => key === \"Enter\" && setSearchString(inputValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"GorvfOgkQsq9BZgkHquOP5ClKZ8=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/Nandi/Desktop/movie-search/src/components/Search.jsx"],"names":["React","useEffect","useState","SearchIcon","styled","alpha","InputBase","axios","API_URL","getMovie","GlobalContext","Search","theme","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","color","paddingLeft","transition","transitions","create","SearchBar","setMovies","setMoviesLoading","useContext","inputValue","setInputValue","searchString","setSearchString","fetchData","queryResult","post","query","data","searchMovies","target","value","cursor","key"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport InputBase from \"@mui/material/InputBase\";\nimport axios from \"axios\";\nimport { API_URL, getMovie } from \"../constants\";\nimport { GlobalContext } from \"../store/store\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst SearchBar = () => {\n  const { setMovies, setMoviesLoading } = React.useContext(GlobalContext);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [searchString, setSearchString] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setMoviesLoading(true);\n\n      const queryResult = await axios.post(API_URL, {\n        query: getMovie(searchString),\n      });\n\n      const data = queryResult?.data?.data?.searchMovies ?? [];\n      data && setMovies(data);\n\n      setMoviesLoading(false);\n    };\n\n    searchString !== \"\" && fetchData();\n  }, [searchString]);\n\n  return (\n    <Search>\n      <SearchIconWrapper>\n        <SearchIcon />\n      </SearchIconWrapper>\n      <StyledInputBase\n        placeholder=\"Search…\"\n        inputProps={{ \"aria-label\": \"search\" }}\n        onChange={({ target: { value } }) => setInputValue(value)}\n        style={{ cursor: \"pointer\" }}\n        onKeyPress={({ key }) => key === \"Enter\" && setSearchString(inputValue)}\n      />\n    </Search>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}