{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nandi\\\\Desktop\\\\movie-search\\\\src\\\\store\\\\store.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  loadingMovies: false,\n  movies: []\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const setMovies = movies => {\n    movies && dispatch({\n      type: \"SET_MOVIES\",\n      payload: movies\n    });\n  };\n\n  const addExtractTo = (index, extract, url) => {\n    dispatch({\n      type: \"ADD_EXTRACT_TO\",\n      payload: {\n        index,\n        extract,\n        url\n      }\n    });\n  };\n\n  const setLoadingMovies = value => {\n    dispatch({\n      type: \"SET_LOADING_MOVIES\",\n      payload: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: { ...state,\n      addExtractTo,\n      setMovies: movies => setMovies(movies),\n      setMoviesLoading: loading => setLoadingMovies(loading)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["C:/Users/Nandi/Desktop/movie-search/src/store/store.js"],"names":["React","createContext","useReducer","AppReducer","initialState","loadingMovies","movies","GlobalContext","GlobalProvider","children","state","dispatch","setMovies","type","payload","addExtractTo","index","extract","url","setLoadingMovies","value","setMoviesLoading","loading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,WAAvB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,OAAO,MAAMC,aAAa,gBAAGN,aAAa,CAACG,YAAD,CAAnC;AAEP,OAAO,MAAMI,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC;;AAEA,QAAMQ,SAAS,GAAIN,MAAD,IAAY;AAC5BA,IAAAA,MAAM,IACJK,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,OAAO,EAAER;AAFF,KAAD,CADV;AAKD,GAND;;AAQA,QAAMS,YAAY,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,GAAjB,KAAyB;AAC5CP,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAE;AAAEE,QAAAA,KAAF;AAASC,QAAAA,OAAT;AAAkBC,QAAAA;AAAlB;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCT,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEM;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE,EACL,GAAGV,KADE;AAELK,MAAAA,YAFK;AAGLH,MAAAA,SAAS,EAAGN,MAAD,IAAYM,SAAS,CAACN,MAAD,CAH3B;AAILe,MAAAA,gBAAgB,EAAGC,OAAD,IAAaH,gBAAgB,CAACG,OAAD;AAJ1C,KADT;AAAA,cAQGb;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArCM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./reducer\";\n\nconst initialState = {\n  loadingMovies: false,\n  movies: [],\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const setMovies = (movies) => {\n    movies &&\n      dispatch({\n        type: \"SET_MOVIES\",\n        payload: movies,\n      });\n  };\n\n  const addExtractTo = (index, extract, url) => {\n    dispatch({\n      type: \"ADD_EXTRACT_TO\",\n      payload: { index, extract, url },\n    });\n  };\n\n  const setLoadingMovies = (value) => {\n    dispatch({\n      type: \"SET_LOADING_MOVIES\",\n      payload: value,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        ...state,\n        addExtractTo,\n        setMovies: (movies) => setMovies(movies),\n        setMoviesLoading: (loading) => setLoadingMovies(loading),\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}